version: "3"
services:

  parity:
    image: parity/parity:v2.3.8
    container_name: qa_parity
    command:
      --chain ropsten
      --base-path /home/parity/.local/share/io.parity.ethereum/
      --jsonrpc-apis 'web3,eth,net,parity'
      --jsonrpc-interface '0.0.0.0'
      --jsonrpc-hosts none
      --jsonrpc-cors '*'
      --cache-size 6000
      --db-compaction ssd
      --mode active
      --pruning fast
      --logging info
      --geth
      --jsonrpc-port 8545
    # ports:
    #   - 8545:8545
    volumes:
      - /home/$USER/parity-docker/:/home/parity/.local/share/io.parity.ethereum/
    # networks:
    #   - parity-net
    #   - default
    environment:
      - VIRTUAL_PORT=8545
      - VIRTUAL_HOST=ropsten.district0x.io
      - LETSENCRYPT_HOST=ropsten.district0x.io
      - LETSENCRYPT_EMAIL=filip@district0x.io

  ipfs-daemon:
    build: ipfs/daemon
    container_name: qa_ipfs-daemon
    volumes:
      - /home/$USER/ipfs-docker:/data/ipfs
    networks:
      - ipfs-net

  ipfs-server:
    build: ipfs/server
    container_name: qa_ipfs-server
    depends_on:
      - ipfs-daemon
    networks:
      - ipfs-net
      - default
    environment:
      - VIRTUAL_HOST=ipfs.qa.district0x.io
      - LETSENCRYPT_HOST=ipfs.qa.district0x.io
      - LETSENCRYPT_EMAIL=filip@district0x.io

  # nginx:
  #   image: nginx
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /home/$USER/nginx-docker/conf.d:/etc/nginx/conf.d
  #     - /home/$USER/nginx-docker/vhost.d:/etc/nginx/vhost.d
  #     - /home/$USER/nginx-docker/html:/usr/share/nginx/html
  #     - /home/$USER/nginx-docker/certs:/etc/nginx/certs:ro
  #     - /home/$USER/nginx-docker/htpasswd:/etc/nginx/htpasswd:ro
  #   labels:
  #     com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  #   restart: always

  # nginx-gen:
  #   image: jwilder/docker-gen
  #   container_name: nginx-gen
  #   depends_on:
  #     - nginx
  #   command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  #   volumes:
  #     - /home/$USER/nginx-docker/conf.d:/etc/nginx/conf.d
  #     - /home/$USER/nginx-docker/vhost.d:/etc/nginx/vhost.d
  #     - /home/$USER/nginx-docker/html:/usr/share/nginx/html
  #     - /home/$USER/nginx-docker/certs:/etc/nginx/certs:ro
  #     - /home/$USER/nginx-docker/htpasswd:/etc/nginx/htpasswd:ro
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - /opt/nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
  #   restart: always

  # nginx-letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: nginx-letsencrypt
  #   depends_on:
  #     - nginx
  #     - nginx-gen
  #   environment:
  #     NGINX_DOCKER_GEN_CONTAINER: "nginx-gen"
  #     NGINX_PROXY_CONTAINER: "nginx"
  #   volumes:
  #     - /home/$USER/nginx-docker/conf.d:/etc/nginx/conf.d
  #     - /home/$USER/nginx-docker/vhost.d:/etc/nginx/vhost.d
  #     - /home/$USER/nginx-docker/html:/usr/share/nginx/html
  #     - /home/$USER/nginx-docker/certs:/etc/nginx/certs:rw
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: always
    
  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /home/$USER/nginx-docker/certs:/etc/nginx/certs:ro
      - /home/$USER/nginx-docker/vhost:/etc/nginx/vhost.d
      - /home/$USER/nginx-docker/html:/usr/share/nginx/html
      - /home/$USER/nginx-docker/conf:/etc/nginx/conf.d
      - /home/$USER/nginx-docker/htpasswd:/etc/nginx/htpasswd:ro      
      # - /home/$USER/nginx-docker/dhparam:/etc/nginx/dhparam
    restart: always
      
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/$USER/nginx-docker/certs:/etc/nginx/certs:rw
      - /home/$USER/nginx-docker/vhost:/etc/nginx/vhost.d
      - /home/$USER/nginx-docker/html:/usr/share/nginx/html
      - /home/$USER/nginx-docker/conf:/etc/nginx/conf.d
      # - /home/$USER/nginx-docker/dhparam:/etc/nginx/dhparam
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    restart: always
      
  watchtower:
    image: v2tec/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=https://hooks.slack.com/services/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
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=QA-Watchtower-Service
    command: --label-enable --cleanup --interval 300

networks:
  ipfs-net:
    driver: "bridge"
  # parity-net:
  #   driver: "bridge"
